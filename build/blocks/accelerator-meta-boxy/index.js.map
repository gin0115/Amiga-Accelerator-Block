{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACwD;AACJ;AACC;AACT;AAE7B,SAASI,IAAIA,CAAA,EAAG;EAE9B;EACA,MAAMC,UAAU,GAAGL,sEAAa,EAAE;;EAElC;EACA,MAAMM,QAAQ,GAAGH,0DAAS,CACxBI,MAAM,IAAKA,MAAM,CAAC,aAAa,CAAC,CAACC,kBAAkB,EAAE,EACtD,EAAE,CACF;;EAID;EACA,IAAIF,QAAQ,KAAK,mBAAmB,EAAE;IACrC,OACCG,iEAAA,QAASJ,UAAU,EAAE,mDAErB,CAAM;EAER;EAGA,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGT,mEAAa,CAAC,UAAU,EAAEI,QAAQ,EAAE,MAAM,CAAC;;EAEnE;EACA,MAAMM,aAAa,GAAGF,IAAI,CAACG,wBAAwB;EACnD,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACrCJ,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEG,wBAAwB,EAAEE;IAAM,CAAC,CAAC;EACtD,CAAC;EAID,OACCN,iEAAA,QAASJ,UAAU,EAClBI,iEAAA,CAACR,8DAAW;IACXe,KAAK,EAAC,oBAAoB;IAC1BD,KAAK,EAAEH,aAAc;IACrBK,QAAQ,EAAEH;EAAmB,EAC5B,CACG;AAER;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACqE;AACtD,SAASK,IAAIA,CAAAC,IAAA,EAAiB;EAAA,IAAhB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EAC1C,OAAO,IAAI;EACX;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;;;;;;;;;;ACfA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACsD;AACjB;;AAErC;AACA;AACA;AAC0B;AACA;AACU;;AAEpC;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEK;AAAK,CAAC,GAAGD,wCAAQ;AAEC;AAEnB,MAAME,QAAQ,GAAG;EACvBC,KAAK,EAAEJ,mDAAE,CAAC,uBAAuB,EAAE,iBAAiB,CAAC;EACrDK,QAAQ,EAAE,CAACL,mDAAE,CAAC,QAAQ,CAAC,CAAC;EACxBM,IAAI,EAAEzB,6CAAI;EACVe,IAAIA,+CAAAA;AACL,CAAC;AAEDG,oEAAiB,CAAC,+BAA+B,EAAEI,QAAQ,CAAC,C","sources":["webpack://aptn-utilities/./src/accelerator-meta-boxy/edit.js","webpack://aptn-utilities/./src/accelerator-meta-boxy/save.js","webpack://aptn-utilities/external window [\"wp\",\"blockEditor\"]","webpack://aptn-utilities/external window [\"wp\",\"blocks\"]","webpack://aptn-utilities/external window [\"wp\",\"components\"]","webpack://aptn-utilities/external window [\"wp\",\"coreData\"]","webpack://aptn-utilities/external window [\"wp\",\"data\"]","webpack://aptn-utilities/external window [\"wp\",\"element\"]","webpack://aptn-utilities/external window [\"wp\",\"i18n\"]","webpack://aptn-utilities/webpack/bootstrap","webpack://aptn-utilities/webpack/runtime/compat get default export","webpack://aptn-utilities/webpack/runtime/define property getters","webpack://aptn-utilities/webpack/runtime/hasOwnProperty shorthand","webpack://aptn-utilities/webpack/runtime/make namespace object","webpack://aptn-utilities/./src/accelerator-meta-boxy/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useBlockProps } from \"@wordpress/block-editor\";\nimport { TextControl } from '@wordpress/components';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\n\nexport default function Edit() {\n\n\t// const [memoryVal, setMemoryVal] = useState(memory);\n\tconst blockProps = useBlockProps();\n\n\t// META STUFF = https://developer.wordpress.org/block-editor/how-to-guides/metabox/\n\tconst postType = useSelect(\n\t\t(select) => select('core/editor').getCurrentPostType(),\n\t\t[]\n\t);\n\n\n\n\t// Only allow for accelerator post types.\n\tif (postType !== 'gin0115_amiga_acc') {\n\t\treturn (\n\t\t\t<div {...blockProps}>\n\t\t\t\tThis block can only be used on accelerator posts.\n\t\t\t</div>\n\t\t)\n\t}\n\n\n\tconst [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n\t// Handle the change of Memory.\n\tconst currentMemory = meta.gin0115_amiga_acc_memory;\n\tconst handleMemoryChange = (value) => {\n\t\tsetMeta({ ...meta, gin0115_amiga_acc_memory: value });\n\t};\n\n\n\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t<TextControl\n\t\t\t\tlabel=\"Accelerator Memory\"\n\t\t\t\tvalue={currentMemory}\n\t\t\t\tonChange={handleMemoryChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","/**\n * WordPress dependencies\n */\nimport { InnerBlocks, useBlockProps } from \"@wordpress/block-editor\";\nexport default function save({ attributes }) {\n\treturn null;\n\t// console.log(attributes);\n\n\t// return (\n\t// \t<li {...useBlockProps.save({})}>\n\t// \t\t<div className=\"wp-block-aptn-icon-list-item-content\">\n\t// \t\t\t{attributes.memory}\n\t// \t\t</div>\n\t// \t</li>\n\t// );\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit\";\nimport save from \"./save\";\nimport metadata from \"./block.json\";\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\nconst { name } = metadata;\n\nexport { metadata, name };\n\nexport const settings = {\n\ttitle: __(\"Accelerator Meta Boxy\", \"amiga-acc-block\"),\n\tkeywords: [__(\"design\")],\n\tedit: Edit,\n\tsave,\n};\n\nregisterBlockType(\"gin0115/accelerator-meta-boxy\", settings);\n"],"names":["useBlockProps","TextControl","useEntityProp","useSelect","Edit","blockProps","postType","select","getCurrentPostType","createElement","meta","setMeta","currentMemory","gin0115_amiga_acc_memory","handleMemoryChange","value","label","onChange","InnerBlocks","save","_ref","attributes","registerBlockType","__","metadata","name","settings","title","keywords","edit"],"sourceRoot":""}